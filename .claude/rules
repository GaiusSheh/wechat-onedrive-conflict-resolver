请始终记住以下规则：
1. 如果对代码有实际意义上的修改，需要在每一个完整地session后自动记录这个session做了什么（在.dev/CHANGELOG.md）中，顺序记录
2. 在每轮对话后扼要记录对话内容（.claude/在CONVERSATION_LOG.md）中，顺序记录
3. 不要在控制台打印emoji - 这会导致在命令行中显示不正确
4. 在测试完成之后，将所有的测试文件归入到 .dev 下面的 tests。
5. 请记住隐藏文件夹（以点开头的文件夹）在命令行中默认是不可见的，需要使用 `ls -a` 命令查看。

【重要】代码修改安全准则：
6. **优先注释而非删除**：修改代码时，优先选择注释掉原有功能，而不是直接删除
   - 使用 # DEPRECATED: [原因] 或 # OLD VERSION: [日期] 标记注释的代码
   - 新代码添加在注释代码下方，便于对比和回滚
   - 只有在经过2-3轮迭代验证新代码稳定后，才删除最早的注释代码
7. **大规模修改前必须备份**：任何可能影响核心功能的修改前，必须先创建备份文件
   - 格式：原文件名_backup_YYYYMMDD_HHMMSS.py
   - 或使用git commit确保有恢复点
8. **渐进式修改**：避免一次性大幅替换代码，采用小步骤迭代的方式
9. **修改后立即测试**：每个修改步骤完成后立即验证功能正常
10. **保持可回滚性**：确保任何时候都能快速回到上一个工作状态
11. **记录所有修改**：每次修改后都要更新 CHANGELOG.md 和 CONVERSATION_LOG.md
12. 所有不用的代码移入 .dev/deprecated 目录下，保持代码库整洁